{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qlamb\\\\Desktop\\\\Projects\\\\spotify-app\\\\client\\\\src\\\\pages\\\\TopArtists.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getTopArtists } from '../spotify';\nimport { catchErrors } from '../utils';\nimport { ArtistsGrid, SectionWrapper, TimeRangeButtons } from '../components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopArtists = () => {\n  _s();\n  const [topArtists, setTopArtists] = useState(null);\n  const [activeRange, setActiveRange] = useState('short');\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await getTopArtists(`${activeRange}_term`);\n      setTopArtists(data);\n    };\n    catchErrors(fetchData());\n  }, [activeRange]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(SectionWrapper, {\n      title: \"Top Artists\",\n      breadcrumb: true,\n      children: [/*#__PURE__*/_jsxDEV(TimeRangeButtons, {\n        activeRange: activeRange,\n        setActiveRange: setActiveRange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), topArtists && topArtists.items && /*#__PURE__*/_jsxDEV(ArtistsGrid, {\n        artists: topArtists.items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(TopArtists, \"5+CfRrJJACuK1YVIzsZvNuY6y74=\");\n_c = TopArtists;\nexport default TopArtists;\nvar _c;\n$RefreshReg$(_c, \"TopArtists\");","map":{"version":3,"names":["useState","useEffect","getTopArtists","catchErrors","ArtistsGrid","SectionWrapper","TimeRangeButtons","TopArtists","topArtists","setTopArtists","activeRange","setActiveRange","fetchData","data","items"],"sources":["C:/Users/qlamb/Desktop/Projects/spotify-app/client/src/pages/TopArtists.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getTopArtists } from '../spotify';\r\nimport { catchErrors } from '../utils';\r\nimport { ArtistsGrid, SectionWrapper, TimeRangeButtons } from '../components';\r\n\r\nconst TopArtists = () => {\r\n  const [topArtists, setTopArtists] = useState(null);\r\n  const [activeRange, setActiveRange] = useState('short');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await getTopArtists(`${activeRange}_term`);\r\n      setTopArtists(data);\r\n    };\r\n\r\n    \r\n\r\n    catchErrors(fetchData());\r\n  }, [activeRange]);\r\n\r\n  return (\r\n    <main>\r\n      <SectionWrapper title=\"Top Artists\" breadcrumb={true}>\r\n        <TimeRangeButtons\r\n          activeRange={activeRange}\r\n          setActiveRange={setActiveRange}\r\n        />\r\n\r\n        {topArtists && topArtists.items && (\r\n          <ArtistsGrid artists={topArtists.items} />\r\n        )}\r\n      </SectionWrapper>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TopArtists;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,YAAY;AAC1C,SAASC,WAAW,QAAQ,UAAU;AACtC,SAASC,WAAW,EAAEC,cAAc,EAAEC,gBAAgB,QAAQ,eAAe;AAAC;AAE9E,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,YAAY;MAC5B,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMX,aAAa,CAAE,GAAEQ,WAAY,OAAM,CAAC;MAC3DD,aAAa,CAACI,IAAI,CAAC;IACrB,CAAC;IAIDV,WAAW,CAACS,SAAS,EAAE,CAAC;EAC1B,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAEjB,oBACE;IAAA,uBACE,QAAC,cAAc;MAAC,KAAK,EAAC,aAAa;MAAC,UAAU,EAAE,IAAK;MAAA,wBACnD,QAAC,gBAAgB;QACf,WAAW,EAAEA,WAAY;QACzB,cAAc,EAAEC;MAAe;QAAA;QAAA;QAAA;MAAA,QAC/B,EAEDH,UAAU,IAAIA,UAAU,CAACM,KAAK,iBAC7B,QAAC,WAAW;QAAC,OAAO,EAAEN,UAAU,CAACM;MAAM;QAAA;QAAA;QAAA;MAAA,QACxC;IAAA;MAAA;MAAA;MAAA;IAAA;EACc;IAAA;IAAA;IAAA;EAAA,QACZ;AAEX,CAAC;AAAC,GA7BIP,UAAU;AAAA,KAAVA,UAAU;AA+BhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}