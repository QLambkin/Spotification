{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qlamb\\\\Desktop\\\\Projects\\\\spotify-app\\\\client\\\\src\\\\components\\\\TrackList.js\";\nimport { formatDuration } from '../utils';\nimport { StyledTrackList } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TrackList = _ref => {\n  let {\n    tracks\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tracks && tracks.length ? /*#__PURE__*/_jsxDEV(StyledTrackList, {\n      children: tracks.map((track, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"track__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track__item__num\",\n          children: i + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track__item__title-group\",\n          children: [track.album.images.length && track.album.images[2] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track__item__img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: track.album.images[2].url,\n              alt: track.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track__item__name-artist\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track__item__name overflow-ellipsis\",\n              children: track.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track__item__artist overflow-ellipsis\",\n              children: track.artists.map((artist, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [artist.name, i !== track.artists.length - 1 && ', ']\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track__item__album overflow-ellipsis\",\n          children: track.album.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track__item__duration\",\n          children: formatDuration(track.duration_ms)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"empty-notice\",\n      children: \"No tracks available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = TrackList;\nexport default TrackList;\nvar _c;\n$RefreshReg$(_c, \"TrackList\");","map":{"version":3,"names":["formatDuration","StyledTrackList","TrackList","tracks","length","map","track","i","album","images","url","name","artists","artist","duration_ms"],"sources":["C:/Users/qlamb/Desktop/Projects/spotify-app/client/src/components/TrackList.js"],"sourcesContent":["import { formatDuration } from '../utils';\r\nimport { StyledTrackList } from '../styles';\r\n\r\nconst TrackList = ({ tracks }) => (\r\n  <>\r\n    {tracks && tracks.length ? (\r\n      <StyledTrackList>\r\n        {tracks.map((track, i) => (\r\n          <li className=\"track__item\" key={i}>\r\n            <div className=\"track__item__num\">{i + 1}</div>\r\n            <div className=\"track__item__title-group\">\r\n              {track.album.images.length && track.album.images[2] && (\r\n                <div className=\"track__item__img\">\r\n                  <img src={track.album.images[2].url} alt={track.name} />\r\n                </div>\r\n              )}\r\n              <div className=\"track__item__name-artist\">\r\n                <div className=\"track__item__name overflow-ellipsis\">\r\n                  {track.name}\r\n                </div>\r\n                <div className=\"track__item__artist overflow-ellipsis\">\r\n                  {track.artists.map((artist, i) => (\r\n                    <span key={i}>\r\n                      {artist.name}{i !== track.artists.length - 1 && ', '}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"track__item__album overflow-ellipsis\">\r\n              {track.album.name}\r\n            </div>\r\n            <div className=\"track__item__duration\">\r\n              {formatDuration(track.duration_ms)}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </StyledTrackList>\r\n    ) : (\r\n      <p className=\"empty-notice\">No tracks available</p>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default TrackList;\r\n"],"mappings":";AAAA,SAASA,cAAc,QAAQ,UAAU;AACzC,SAASC,eAAe,QAAQ,WAAW;AAAC;AAAA;AAE5C,MAAMC,SAAS,GAAG;EAAA,IAAC;IAAEC;EAAO,CAAC;EAAA,oBAC3B;IAAA,UACGA,MAAM,IAAIA,MAAM,CAACC,MAAM,gBACtB,QAAC,eAAe;MAAA,UACbD,MAAM,CAACE,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBACnB;QAAI,SAAS,EAAC,aAAa;QAAA,wBACzB;UAAK,SAAS,EAAC,kBAAkB;UAAA,UAAEA,CAAC,GAAG;QAAC;UAAA;UAAA;UAAA;QAAA,QAAO,eAC/C;UAAK,SAAS,EAAC,0BAA0B;UAAA,WACtCD,KAAK,CAACE,KAAK,CAACC,MAAM,CAACL,MAAM,IAAIE,KAAK,CAACE,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,iBACjD;YAAK,SAAS,EAAC,kBAAkB;YAAA,uBAC/B;cAAK,GAAG,EAAEH,KAAK,CAACE,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,GAAI;cAAC,GAAG,EAAEJ,KAAK,CAACK;YAAK;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QAE3D,eACD;YAAK,SAAS,EAAC,0BAA0B;YAAA,wBACvC;cAAK,SAAS,EAAC,qCAAqC;cAAA,UACjDL,KAAK,CAACK;YAAI;cAAA;cAAA;cAAA;YAAA,QACP,eACN;cAAK,SAAS,EAAC,uCAAuC;cAAA,UACnDL,KAAK,CAACM,OAAO,CAACP,GAAG,CAAC,CAACQ,MAAM,EAAEN,CAAC,kBAC3B;gBAAA,WACGM,MAAM,CAACF,IAAI,EAAEJ,CAAC,KAAKD,KAAK,CAACM,OAAO,CAACR,MAAM,GAAG,CAAC,IAAI,IAAI;cAAA,GAD3CG,CAAC;gBAAA;gBAAA;gBAAA;cAAA,QAGb;YAAC;cAAA;cAAA;cAAA;YAAA,QACE;UAAA;YAAA;YAAA;YAAA;UAAA,QACF;QAAA;UAAA;UAAA;UAAA;QAAA,QACF,eACN;UAAK,SAAS,EAAC,sCAAsC;UAAA,UAClDD,KAAK,CAACE,KAAK,CAACG;QAAI;UAAA;UAAA;UAAA;QAAA,QACb,eACN;UAAK,SAAS,EAAC,uBAAuB;UAAA,UACnCX,cAAc,CAACM,KAAK,CAACQ,WAAW;QAAC;UAAA;UAAA;UAAA;QAAA,QAC9B;MAAA,GA1ByBP,CAAC;QAAA;QAAA;QAAA;MAAA,QA4BnC;IAAC;MAAA;MAAA;MAAA;IAAA,QACc,gBAElB;MAAG,SAAS,EAAC,cAAc;MAAA,UAAC;IAAmB;MAAA;MAAA;MAAA;IAAA;EAChD,iBACA;AAAA,CACJ;AAAC,KAvCIL,SAAS;AAyCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}